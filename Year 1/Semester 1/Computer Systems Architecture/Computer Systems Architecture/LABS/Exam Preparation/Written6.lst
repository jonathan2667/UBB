     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, printf
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  
     8                                  segment data use32 class = data
     9                                  extern functie
    10                                  
    11 00000000 FFFFFFFF40E20100FF-     sir dd -1,123456,0xabcdeff,0xabcdeff,0xcbcdeff,0xdbcdeff,0111010101b;
    11 00000009 DEBC0AFFDEBC0AFFDE-
    11 00000012 BC0CFFDEBC0DD50100-
    11 0000001B 00                 
    12                                  len equ ($-sir)/ 4
    13 0000001C 00000000<rept>          rez times len dd 0
    14 00000038 00000000                prev_rez dd 0
    15 0000003C 00000000                prev_sir dd 0
    16 00000040 00000000                cnt dd 0
    17 00000044 25780A0D00              print db "%x", 10, 13, 0
    18 00000049 25780A0D00              print_x db "%x", 10, 13, 0 
    19 0000004E 00000000                aux dd 0
    20                                  segment code use32 class = code
    21                                  start:
    22                                      
    23 00000000 6A07                        push dword len
    24 00000002 68[1C000000]                push dword rez
    25 00000007 68[00000000]                push dword sir
    26 0000000C E8(00000000)                call functie
    27 00000011 83C40C                      add esp, 4 * 3
    28                                      
    29 00000014 BF[1C000000]                mov edi, rez
    30 00000019 BE[00000000]                mov esi, sir
    31 0000001E B906000000                  mov ecx, len - 1
    32                                      
    33                                      
    34 00000023 AD                          lodsd ; sir
    35 00000024 A3[3C000000]                mov dword [prev_sir], eax
    36                                      
    37 00000029 8B1F                        mov ebx, dword [EDI] ; rez
    38 0000002B 83C704                      add edi, 4
    39 0000002E 891D[38000000]              mov dword [prev_rez], ebx
    40                                      
    41                                  
    42                                      repeta:
    43 00000034 AD                              lodsd ; sir
    44                                      
    45 00000035 8B1F                            mov ebx, dword [EDI] ; rez
    46 00000037 83C704                          add edi, 4
    47                                          
    48 0000003A A3[4E000000]                    mov dword[aux], eax 
    49                                         
    50 0000003F 3B1D[38000000]                  cmp ebx, dword [prev_rez]
    51 00000045 7637                            jbe nu_afisez
    52                                          
    53 00000047 833D[40000000]00                cmp dword[cnt], 0
    54 0000004E 7516                            jne second
    55                                          
    56 00000050 51                              push ecx
    57                                          
    58 00000051 FF35[3C000000]                  push dword [prev_sir]
    59 00000057 68[44000000]                    push dword print
    60 0000005C FF15[00000000]                  call [printf]
    61 00000062 83C408                          add esp, 4 * 2
    62                                          
    63 00000065 59                              pop ecx
    64                                          
    65                                          second:
    66 00000066 51                              push ecx
    67                                          
    68 00000067 FF35[4E000000]                  push dword [aux]
    69 0000006D 68[44000000]                    push dword print
    70 00000072 FF15[00000000]                  call [printf]
    71 00000078 83C408                          add esp, 4 * 2
    72                                          
    73 0000007B 59                              pop ecx
    74                                          
    75 0000007C EB0A                            jmp continue_loop
    76                                          
    77                                          nu_afisez:
    78 0000007E C705[40000000]0000-             mov dword[cnt], 0
    78 00000086 0000               
    79                                          
    80                                          continue_loop:
    81                                          
    82 00000088 A3[3C000000]                    mov dword [prev_sir], eax
    83 0000008D 891D[38000000]                  mov dword [prev_rez], ebx
    84 00000093 E29F                        loop repeta
    85                                      
    86                                      
