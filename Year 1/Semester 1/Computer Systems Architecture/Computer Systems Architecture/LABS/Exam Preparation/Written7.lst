     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern printf, exit
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  segment data use32 class = data
    10 00000000 AB12CD32EF56                s1 dw  12abh, 32cdh, 56efh
    11 00000006 00351100F87F                s2 dw 3500h, 0011h, 7ff8h
    12                                      len equ ($ - s2) / 2
    13 0000000C 00000000<rept>              rez times len dd 0
    14 00000018 00000000                    cnt1 dd 0
    15 0000001C 00000000                    cnt2 dd 0
    16 00000020 00000000                    aux dd 0
    17 00000024 25780A0D00                  print db "%x", 10, 13, 0
    18                                  segment code use32 class = code
    19                                  start:
    20                                      
    21 00000000 B903000000                  mov ecx, len
    22 00000005 BE[00000000]                mov esi, s1
    23 0000000A BF[0C000000]                mov edi, rez 
    24                                      
    25                                      repeta:
    26 0000000F B800000000                      mov eax, 0
    27 00000014 66AD                            lodsw
    28                                          
    29 00000016 0FB6D8                          movzx ebx, al
    30 00000019 C705[18000000]0000-             mov dword[cnt1], 0
    30 00000021 0000               
    31                                         
    32                                          
    33                                          repeta1:
    34 00000023 891D[20000000]                      mov dword [aux], ebx
    35 00000029 83E301                              and ebx, 1
    36 0000002C 83FB01                              cmp ebx, 1
    37 0000002F 7507                                jne sari
    38                                              
    39 00000031 8305[18000000]01                    add dword [cnt1], 1
    40                                       
    41                                              sari:
    42                                              
    43 00000038 8B1D[20000000]                      mov ebx, dword [aux]
    44 0000003E D1EB                                shr ebx, 1
    45 00000040 83FB00                              cmp ebx, 0
    46 00000043 75DE                            jnz repeta1
    47                                          
    48 00000045 0FB6DC                          movzx ebx, ah
    49 00000048 C705[1C000000]0000-             mov dword[cnt2], 0
    49 00000050 0000               
    50                                          
    51                                          repeta2:
    52 00000052 891D[20000000]                      mov dword [aux], ebx
    53 00000058 83E301                              and ebx, 1
    54 0000005B 83FB01                              cmp ebx, 1
    55 0000005E 7507                                jne sari1
    56                                              
    57 00000060 8305[1C000000]01                    add dword [cnt2], 1
    58                                       
    59                                              sari1:
    60                                              
    61 00000067 8B1D[20000000]                      mov ebx, dword [aux]
    62 0000006D D1EB                                shr ebx, 1
    63 0000006F 83FB00                              cmp ebx, 0
    64 00000072 75DE                            jnz repeta2
    65                                          
    66                                          
    67 00000074 8B1D[18000000]                  mov ebx, dword [cnt1]
    68 0000007A 3B1D[1C000000]                  cmp ebx, dword [cnt2]
    69                                          
    70 00000080 7206                            jb sari2
    71                                          
    72 00000082 88C3                            mov bl, al
    73 00000084 88E0                            mov al, ah
    74 00000086 88DC                            mov ah, bl
    75                                          
    76                                          sari2: 
    77                                          
    78 00000088 AB                              stosd 
    79                                          
    80 00000089 E284                        loop repeta
    81                                      
    82                                      
    83 0000008B B903000000                  mov ecx, len
    84 00000090 BF[06000000]                mov edi, s2
    85 00000095 BE[0C000000]                mov esi, rez
    86                                      start_loop:
    87 0000009A AD                              lodsd
    88 0000009B 51                              push ecx 
    89                                          
    90 0000009C 50                              push eax
    91 0000009D 68[24000000]                    push print
    92 000000A2 FF15[00000000]                  call [printf]
    93 000000A8 83C408                          add esp, 4 * 2
    94                                          
    95 000000AB 59                              pop ecx
    96 000000AC E2EC                        loop start_loop
    97                                      
    98 000000AE 6A00                        push dword 0
    99 000000B0 FF15[00000000]              call [printf]
   100                                   
