     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               
     8                                  import exit msvcrt.dll    
     9                                  import printf msvcrt.dll    
    10                                  import scanf msvcrt.dll     
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 00000000                    a dd 0
    15 00000004 00000000                    b dd 0
    16 00000008 00000000                    res dd 0
    17 0000000C 256400                      format db "%d", 0
    18                                      
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 68[00000000]                    push dword a
    24 00000005 68[0C000000]                    push dword format 
    25 0000000A FF15[00000000]                  call [scanf]
    26 00000010 83C408                          add esp, 4 * 2
    27                                          
    28 00000013 8B1D[00000000]                  mov ebx, [a]
    29                                          
    30 00000019 68[04000000]                    push dword b
    31 0000001E 68[0C000000]                    push dword format 
    32 00000023 FF15[00000000]                  call [scanf]
    33 00000029 83C408                          add esp, 4 * 2
    34                                          
    35 0000002C A1[04000000]                    mov eax, [b]
    36 00000031 01D8                            add eax, ebx
    37                                          
    38 00000033 50                              push eax 
    39 00000034 68[0C000000]                    push format 
    40 00000039 FF15[00000000]                  call [printf]
    41 0000003F 83C408                          add esp, 4 * 2
    42                                          
    43                                          ; exit(0)
    44 00000042 6A00                            push    dword 0      
    45 00000044 FF15[00000000]                  call    [exit]       
