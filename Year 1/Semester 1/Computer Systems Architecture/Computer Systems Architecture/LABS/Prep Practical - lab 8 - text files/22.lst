     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, fopen, fprintf, fclose, printf, scanf
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import exit msvcrt.dll    
    11                                  import printf msvcrt.dll    
    12                                  import scanf msvcrt.dll     
    13                                  
    14                                  
    15                                  segment data use32 class=data
    16 00000000 32322E74787400             file_name_read db "22.txt", 0
    17 00000007 39300000                   number dd 12345
    18 0000000B 7700                       access_mode db "w", 0
    19 0000000D FFFFFFFF                   file_descriptor_read dd -1
    20 00000011 00000000                   digit dd 0
    21 00000015 25640A00                   format db "%d", 10, 0
    22                                     
    23                                  segment code use32 class=code
    24                                  start:
    25 00000000 68[0B000000]               push dword access_mode
    26 00000005 68[00000000]               push dword file_name_read
    27 0000000A FF15[00000000]             call [fopen]
    28 00000010 83C408                     add esp, 4 * 2
    29                                     
    30 00000013 83F800                     cmp eax, 0
    31                                     
    32 00000016 7457                       je final
    33 00000018 A3[0D000000]               mov [file_descriptor_read], eax
    34                                     
    35 0000001D A1[07000000]               mov eax, [number]
    36 00000022 83F800                     cmp eax, 0
    37 00000025 7448                       je final
    38                                     
    39                                  start_loop:
    40 00000027 50                          push eax
    41 00000028 6658                        pop ax 
    42 0000002A 665A                        pop dx 
    43                                      
    44 0000002C 66BB0A00                    mov bx, 10
    45 00000030 66F7F3                      div bx
    46                                      
    47 00000033 668915[11000000]            mov [digit], dx
    48 0000003A 6650                        push ax 
    49                                      
    50                                  printing:
    51 0000003C FF35[11000000]              push dword [digit]
    52 00000042 68[15000000]                push dword format
    53 00000047 FF35[0D000000]              push dword [file_descriptor_read]
    54 0000004D FF15[00000000]              call [fprintf]
    55 00000053 83C40C                      add esp, 4 * 3
    56                                      
    57 00000056 6658                        pop ax
    58                                      
    59 00000058 6683F800                    cmp ax, 0
    60 0000005C 7402                        je close
    61                                      
    62 0000005E EBC7                        jmp start_loop
    63                                     
    64                                  close:
    65 00000060 FF35[0D000000]              push dword [file_descriptor_read]
    66 00000066 FF15[00000000]              call [fclose]
    67 0000006C 83C404                      add esp, 4
    68                                      
    69                                  final:
    70                                      
    71 0000006F 6A00                        push    dword 0    
    72 00000071 FF15[00000000]              call    [exit]     
    73                                      
