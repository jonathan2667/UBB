     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern printf, exit, scanf
     6                                  
     7                                  import printf msvcrt.dll
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  
    11                                  segment data use32 class = data
    12 00000000 00<rept>                    sir_octeti times 3 db 0
    13 00000003 00000000<rept>              sir_numere times 3 dd 0
    14                                      
    15 0000000F 00000000<rept>              sir times 5 dd 0
    16 00000023 00000000                    n dd 0
    17 00000027 00000000                    aux dd 0
    18 0000002B 256400                      format_citire db "%d", 0
    19 0000002E 00                          suma db 0
    20 0000002F 00000000                    copie dd 0
    21                                      
    22                                  segment code use32 class = code
    23                                  start:
    24 00000000 68[23000000]                push dword n
    25 00000005 68[2B000000]                push dword format_citire
    26 0000000A FF15[00000000]              call [scanf]
    27 00000010 83C408                      add esp, 4 * 2
    28                                      
    29 00000013 8B0D[23000000]              mov ecx, [n]
    30 00000019 83F900                      cmp ecx, 0
    31 0000001C BF[00000000]                mov edi, sir_octeti
    32 00000021 BE[03000000]                mov esi, sir_numere
    33                                      
    34 00000026 744E                        je final
    35                                      
    36                                      repeta:
    37 00000028 51                              push ecx
    38                                          
    39 00000029 68[27000000]                    push dword aux
    40 0000002E 68[2B000000]                    push dword format_citire
    41 00000033 FF15[00000000]                  call [scanf]
    42 00000039 83C408                          add esp, 4 * 2
    43                                          
    44 0000003C 59                              pop ecx 
    45                                          
    46                                          
    47 0000003D A1[27000000]                    mov eax, [aux]
    48 00000042 8906                            mov [esi], eax 
    49 00000044 83C604                          add esi, 4
    50                                          
    51 00000047 C605[2E000000]00                mov byte[suma], 0
    52                                          
    53                                          suma_repeta:
    54 0000004E 83F800                              cmp eax, 0
    55 00000051 7419                                je final_suma
    56                                              
    57 00000053 BA00000000                          mov edx, 0
    58 00000058 BB0A000000                          mov ebx, 10
    59 0000005D F7F3                                div ebx
    60                                              
    61 0000005F F6C201                              test dl, 1
    62 00000062 7506                                jnz sari 
    63 00000064 0015[2E000000]                      add [suma], dl
    64                                              sari:
    65                                              
    66 0000006A EBE2                            jmp suma_repeta
    67                                          final_suma:
    68                                          
    69 0000006C A0[2E000000]                    mov al, [suma]
    70 00000071 8807                            mov [edi], al
    71 00000073 47                              inc edi 
    72                                      
    73 00000074 E2B2                        loop repeta
    74                                      
    75                                  final:
    76 00000076 6A00                        push dword 0
    77 00000078 FF15[00000000]              call [exit]
