ssh ex2079@172.30.0.9 -p22

1.
RO: Daţi trei expresii regulare care acceptă orice număr ne-negativ multiplu de 5.
EN: Give three regular expressions that match any non-negative number multiple of 5.

1. ^[0-9]*[05]$
2. ^0$|^[0-9]*[05]$
3. ^5$|^[0-9]*[05]$

*****
Cred ca ar mai merge si: \<[0-9]*[05]\> (nu stiu sigur daca trb sa fie toata linia sau doar numarul)

2.
RO: Daţi cinci comenzi GREP care afişează toate liniile dintr-un fişier care conţin litera "a" mare sau mic.
EN: Give five GREP commands that display all the lines in a file that contain letter "a" uppercase or lowercase.

grep -i "a" filename
grep -Ei "a" filename
grep "[aA]" filename
grep -Ei "[a]+" filename
grep -iw "a" filename

*****
Penultima nu merge, trebuie sa fie: grep -E -i "[a]+" filename. Fara -E cred ca incearca sa caute cuvantul [a]+ si nu-l gaseste.

Ultima nu merge (-w : Select  only  those lines containing matches that form whole words) (din man grep). Adica functioneaza doar daca ai cuvantul "a" sau "A". Daca ai cuvantul "ana" nu ti-l afiseaza.

Alta varianta (in locul ultimei):
grep -E -v "[^Aa]" filename
(-v - display lines that do not match the given regular expression) (teaching notes)

3.
RO: Scrieţi două comenzi SED care afişează dintr-un fişier doar liniile care nu conţin cifra 7.
EN: Write two SED commands that display from a file only the lines that do not contain digit 7.

sed -E "/7/d" filename
sed -n "/7/!p" filename

*****
Mie ultima nu mi merge in terminal cand o scriu(imi da ceva eroare).
Poate se pune ca o comanda diferita asta: sed -E "/[7]+/d" filename
Saaaaaau mai merge si asa:  sed -E "s/(^.*[7].*)$//gi" filename (cu toate ca aici liniile care au 7 doar le face goale)

4.
RO: Scrieţi o comandă AWK care afişează suma penultimului câmp al tuturor liniilor.
EN: Write an AWK command that displays the sum of the next to last field of all lines.

awk "{SUM += $(NF-1)} END{print SUM}" filename

*****
Imi da syntax error pe comanda asta.
Gataaa, am gasit problema trebuie ' ', nu " " (awk '{SUM += $(NF-1)} END{print SUM}' filename - correct)

5.
RO: Cum puteţi redirecta în linia de comanda ieşirea de eroare prin pipe înspre un alt program?
EN: How can you redirect on the command line the standard error through pipe to another program?

command 2>&1 | another_program

*****
Cred ca e bine. In teaching notes e asa:
e. Redirect the errors of a command to a file: rm some-file-that-does-not-exist.c 2> output.err
f. Redirect both the standard and error output in the same file: rm some-file-that-does-not-exist.c > output.all 2>&1 - read as, redirect standard output to output.all, and the error output to the same place where the standard output goes


6.
RO: Scrieţi un script Shell UNIX care afişează toate argumentele din linia de comandă fără a folosi FOR.EN: Write a UNIX Shell script that displays all command line arguments without using FOR

echo "$@"

*****
Cred ca trebuie sa scrii si: 
#!/bin/bash
echo "$@"

7.
RO: Desenati ierarhia proceselor create de codul de mai jos, incluzand procesul parinte.
EN: Draw the hierarchy of processes created by the code below, including the parent process.

    for(i=0; i<3; i++) {
        fork();
        execlp("ls", "ls", "/", NULL);
    }

p->c1

8.
RO: Adăugaţi codul C necesar pentru ca fişierul b.txt să fie suprascris cu conţinutul fişierului a.txt din instrucţiunea de mai jos.
EN: Add the necessary code so that file b.txt is overwritten with the content of file a.txt from the instruction below.

    execlp("cat", "cat", "a.txt", NULL);


int fd = open("b.txt", O_WRONLY, 0644);
dup2(fd, STDOUT_FILNO)

*****
Nu stiu daca e bine. Eu am testat asta pe terminal si merge: execlp("sh", "sh","-c" ,"cat a.txt > b.txt", NULL);


9.
RO: De ce nu e recomandat sa comunicaţi bidirecţional printr-un singur FIFO?
EN: Why is it not advisable to communicate bidirectionally through a single FIFO?

We need to create 2 fifo for bidirectional communication, since a FIFO can only communicate one way and also we avoid unexpected program behavior.
Using directional can lead to race conditions, deadlocks.


*****
Poate merge si adaugat ca: we are not sure of the order in which the process will write in the fifo, which can cause data corruption. suppose process A wants to write abc and then process B 123
if A loses the CPU during the write we can have something like a1bc23

10.
RO: Câte FIFO-uri poate deschide un process dacă nu sunt şi nici nu vor fi folosite vreodată de vreun alt proces?
EN: How many FIFOs can a process open if they are not and will not ever be used by any other process?

A process can open as many FIFOS as many as the system;s file descriptor limit allows, it can be checked using ulimit -n command.

11.
RO: Când aţi folosi un process în locul unui thread?
EN: When would you prefer using a process instead of a thread?

-Process have their own memory space, providing own memory space and reducing memory corruption
-Process can be distributed to multiple machines, while threads are limited to a single machine ressources
-processes offer better security boundaries, since the do not share the same address space
-a crash in one process does not affect the outcome of the others

12.
RO: Ce este o "secţiune critică"?
EN: What is a "critical section"?

A critical section is a section in the program where shared ressources, such as memory variables are accessed and potentially modifed. We have to prevent its stability trough mutual exclusion to
ensure consistent data behavior.

13.
RO: De ce un thread trebuie să reverifice condiţia la ieşirea din apelul pthread_cond_wait?
EN: Why should the thread recheck the condition after returning from the pthread_cond_wait call?

A thread needs to recheck to be sure the thread can enter correctly and the condition is still true because of signals from other thread that could have occurred.

14.
RO: Care va fi efectul înlocuirii apelurilor la pthread_mutex_lock cu apeluri la pthread_rwlock_rdlock?
EN: What will be the effect of replacing calls to pthread_mutex_lock with calls to pthread_rwlock_rdlock?

It will cause issues because pthread_rwlock-rd_lock is used for read locks allowing multiple threads to access the critical section, which does not enseure mutual exculsion and could lead to data races. 

15.
RO: Care e efectul apelului la pthread_barrier_wait pentru o barieră iniţializată cu 1?
EN: What is the effect of calling pthread_barrier_wait on a barrier initialized with 1?

It will immediately release the watigin thread because the barrier condition is already satisfies. It wont need any waiting and the thread will proceed.
(It will work similar as a pthread_mutex.)

16.
RO: Cum puteţi incrementa valoarea unui semafor?
EN: How can you increment the value of a POSIX semaphore?

sem_post.

17.
RO: Ce puteţi face ca programator pentru a preveni deadlock-urile?
EN: What can you do as a software developer to prevent deadlocks?

-Use consistent locking order
-avoid nested locks
-utilize ressource hierachies

18.
RO: Prin ce tranziţie de stare va trece un process când citeşte dintr-un fişier?
EN: What state transition will a process undergo when reading from a file?

When a process reads from a file, it trnastions from the running state to the blocked state if the data is not immeditaly available, and the back to ready and running state once the data is available.

*****
to the blocked state (cred ca Boian are in teoria lui si a predat la curs wait state) (acum posibil sa fie aceeasi chestie, nu stiu)

19.
RO: Ce conţinue superblocul unui disc Linux?
EN: What is the content of the superblock on a Linux disk?

filesystem type(ext4, ext3), size information(blocks, free blocks, size), state information, inode information, uuid, mount information

****
In curs scrie:
Blocul 1 este numit şi superbloc. In el sunt trecute o serie de informaţii prin care se defineşte
sistemul de fişiere de pe disc. Printre aceste informaţii amintim:
 numărul n de inoduri (detaliem imediat);
 numărul de zone definite pe disc;
 pointeri spre harta de biţi a alocării inodurilor;
 pointeri spre harta de biţi a spaţiului liber disc;
 dimensiunile zonelor disc, etc.

20.RO: Se poate crea un link hard spre un fişier aflat pe o altă partiţie? Justificaţi răspunsul.
EN: Can you create a hard link towards a file on a different partition? Justify your answer.

no, since hard links must be the same filesystem because they reference the inode and inodes are unique to their filesystem

