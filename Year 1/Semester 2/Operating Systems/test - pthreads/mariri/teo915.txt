#include<pthread.h>
#include<stdio.h>
#include<string.h>
#include<stdlib.h>

pthread_mutex_t m;
pthread_barrier_t b;
int fr[26];

void *f(void* a) {
        char * word = (char*)a;
        pthread_barrier_wait(&b);
        for (int i = 0; i < strlen(word); i++) {
                pthread_mutex_lock(&m);
                if (word[i] >= 'a' && word[i] <= 'z') {
                        if (fr[word[i] - 'a'] == 0) printf("First time of %c", word[i]);
                        fr[word[i]-'a']++;
                }
                pthread_mutex_unlock(&m);
        }
        return NULL;
}

int main(int argc, char **argv) {
        int n;
        scanf("%d", &n);
        char v[n][256];
        pthread_barrier_init(&b, NULL, n+1);
        pthread_mutex_init(&m, NULL);
        for (int i = 0; i < n; i++) scanf("%s", v[i]);
        pthread_t t[n];
        for (int i = 0; i < n; i++) pthread_create(&t[i], NULL, f, (void*)v[i]);
        pthread_barrier_wait(&b);
        for (int i = 0; i < n; i++) pthread_join(t[i], NULL);
        for (int i = 0; i < 26; i++) printf("%d ", fr[i]);
        pthread_barrier_destroy(&b); pthread_mutex_destroy(&m);
        return 0;
}